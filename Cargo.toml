[workspace]
members = [
	"cli",
	"sdk",
	"sdk-httpmock",
	"test-common",
	"xtask",
]
resolver = "2"

[workspace.dependencies]
anyhow = "1.0.75"
assert_cmd = "2.0.12"
async-trait = "0.1.73"
base64 = "0.21.4"
built = { version = "0.6.1", features = ["git2"] }
chrono = { version = "0.4.31", features = ["serde"] }
clap = { version = "4.4", features = ["derive", "string", "env"] }
dialoguer = "0.10.4"
dirs = "4.0.0"
dropshot = { git = "https://github.com/oxidecomputer/dropshot" }
env_logger = "0.10.0"
expectorate = { version = "1.1.0", features = ["predicates"] }
futures = "0.3.28"
http = "0.2.9"
httpmock = "0.6.8"
indicatif = "0.17"
log = "0.4.20"
newline-converter = "0.3.0"
oauth2 = "4.4.2"
open = "4.2.0"
oxide-api = { path = "sdk" }
oxide-httpmock = { path = "sdk-httpmock" }
predicates = "3.0.4"
pretty_assertions = "1.4.0"
progenitor = { git = "https://github.com/oxidecomputer/progenitor" }
progenitor-client = { git = "https://github.com/oxidecomputer/progenitor" }
rand = "0.8.5"
rcgen = "0.10.0"
regex = "1.9.5"
regress = "0.7.1"
reqwest = { version = "0.11.19", features = ["native-tls-vendored"] }
rustfmt-wrapper = "0.2.0"
schemars = { version = "0.8.13", features = ["chrono", "uuid1"] }
serde = { version = "1.0.188", features = ["derive"] }
serde_json = "1.0.107"
serial_test = "1.0.0"
similar = "2.3.0"
sha2 = "0.10.7"
tabwriter = "1.3.0"
tempfile = "3.8.0"
test-common = { path = "test-common" }
thouart = { git = "https://github.com/oxidecomputer/thouart.git" }
tokio = { version = "1.32.0", features = ["full"] }
tokio-tungstenite = "0.19.0"
toml = "0.7.6"
toml_edit = "0.19.15"
url = "2.4.1"
uuid = { version = "1.4.1", features = ["serde", "v4"] }

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.7"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
#rust-toolchain-version = "1.67.1"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = []
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
	"aarch64-apple-darwin",
	"x86_64-apple-darwin",
	"x86_64-pc-windows-msvc",
	"x86_64-unknown-linux-gnu",
]

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

#[patch."https://github.com/oxidecomputer/progenitor"]
#progenitor = { path = "../progenitor/progenitor" }
#[patch."https://github.com/oxidecomputer/typify"]
#typify = { path = "../typify/typify" }
