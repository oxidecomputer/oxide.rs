{
  "name": "oxide",
  "version": "0.4.0+20240327.0",
  "args": [
    {
      "long": "cacert",
      "help": "Specify a trusted CA cert"
    },
    {
      "long": "config-dir",
      "help": "Directory to use for configuration"
    },
    {
      "long": "debug",
      "help": "Enable debug output"
    },
    {
      "long": "insecure",
      "help": "Disable certificate validation and hostname verification"
    },
    {
      "long": "resolve",
      "help": "Modify name resolution"
    },
    {
      "long": "timeout",
      "help": "Timeout value for individual API invocations"
    }
  ],
  "subcommands": [
    {
      "name": "api",
      "about": "Makes an authenticated HTTP request to the Oxide API and prints the response.",
      "long_about": "Makes an authenticated HTTP request to the Oxide API and prints the response.\n\nThe endpoint argument should be a path of a Oxide API endpoint.\n\nThe default HTTP request method is \"GET\" normally and \"POST\" if any\nparameters were added. Override the method with `--method`.\n\nPass one or more `-f/--raw-field` values in \"key=value\" format to add\nstatic string parameters to the request payload. To add non-string or\notherwise dynamic values, see `--field` below. Note that adding request\nparameters will automatically switch the request method to POST. To send\nthe parameters as a GET query string instead, use `--method GET`.\n\nThe `-F/--field` flag has magic type conversion based on the format of the\nvalue:\n\n- literal values \"true\", \"false\", \"null\", and integer/float numbers get\n  converted to appropriate JSON types;\n- if the value starts with \"@\", the rest of the value is interpreted as a\n  filename to read the value from. Pass \"-\" to read from standard input.\n\nRaw request body may be passed from the outside via a file specified by\n`--input`. Pass \"-\" to read from standard input. In this mode, parameters\nspecified via `--field` flags are serialized into URL query parameters.\n\nIn `--paginate` mode, all pages of results will sequentially be requested\nuntil there are no more pages of results.",
      "args": [
        {
          "long": "field",
          "short": "F",
          "help": "Add a typed parameter in key=value format"
        },
        {
          "long": "header",
          "short": "H",
          "help": "Add a HTTP request header in `key:value` format"
        },
        {
          "long": "include",
          "short": "i",
          "help": "Include HTTP response headers in the output"
        },
        {
          "long": "input",
          "help": "The file to use as body for the HTTP request (use \"-\" to read from standard input)"
        },
        {
          "long": "limit",
          "help": "Limit the number of paginated items retrieved"
        },
        {
          "long": "method",
          "short": "X",
          "help": "The HTTP method for the request"
        },
        {
          "long": "paginate",
          "help": "Make additional HTTP requests to fetch all pages of results"
        },
        {
          "long": "raw-field",
          "short": "f",
          "help": "Add a string parameter in key=value format"
        }
      ]
    },
    {
      "name": "auth",
      "about": "Login, logout, and get the status of your authentication.",
      "long_about": "Login, logout, and get the status of your authentication.\n\nManage `oxide`'s authentication state.",
      "subcommands": [
        {
          "name": "login",
          "about": "Authenticate with an Oxide host.",
          "long_about": "Authenticate with an Oxide host.\n\nAlternatively, pass in a token on standard input by using `--with-token`.\n\n    # start interactive setup\n    $ oxide auth login\n\n    # authenticate against a specific Oxide instance by reading the token\n    # from a file\n    $ oxide auth login --with-token --host oxide.internal < mytoken.txt\n\n    # authenticate with a specific Oxide instance\n    $ oxide auth login --host oxide.internal\n\n    # authenticate with an insecure Oxide instance (not recommended)\n    $ oxide auth login --host http://oxide.internal",
          "args": [
            {
              "long": "browser",
              "help": "Override the default browser when opening the authentication URL"
            },
            {
              "long": "host",
              "short": "H",
              "help": "The host of the Oxide instance to authenticate with. This assumes http; specify an `http://` prefix if needed"
            },
            {
              "long": "no-browser",
              "help": "Print the authentication URL rather than opening a browser window"
            },
            {
              "long": "with-token",
              "help": "Read token from standard input"
            }
          ]
        },
        {
          "name": "logout",
          "about": "Removes saved authentication information.",
          "long_about": "Removes saved authentication information.\n\nThis command does not invalidate any tokens from the hosts.",
          "args": [
            {
              "long": "all",
              "short": "a",
              "help": "If set, all known hosts and authentication information will be deleted"
            },
            {
              "long": "force",
              "short": "f",
              "help": "Skip confirmation prompt"
            },
            {
              "long": "host",
              "short": "H",
              "help": "Remove authentication information for a single host"
            }
          ]
        },
        {
          "name": "status",
          "about": "Verifies and displays information about your authentication state.",
          "long_about": "Verifies and displays information about your authentication state.\n\nThis command validates the authentication state for each Oxide environment\nin the current configuration. These hosts may be from your hosts.toml file\nand/or $OXIDE_HOST environment variable.",
          "args": [
            {
              "long": "host",
              "short": "H",
              "help": "Specific hostname to validate"
            },
            {
              "long": "show-token",
              "short": "t",
              "help": "Display the auth token"
            }
          ]
        }
      ]
    },
    {
      "name": "certificate",
      "subcommands": [
        {
          "name": "create",
          "about": "Create new system-wide x.509 certificate",
          "long_about": "This certificate is automatically used by the Oxide Control plane to serve external connections.",
          "args": [
            {
              "long": "cert",
              "help": "PEM-formatted string containing public certificate chain"
            },
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "key",
              "help": "PEM-formatted string containing private key"
            },
            {
              "long": "name"
            },
            {
              "long": "service",
              "values": [
                "external_api"
              ],
              "help": "The service using this certificate"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete certificate",
          "long_about": "Permanently delete a certificate. This operation cannot be undone.",
          "args": [
            {
              "long": "certificate"
            }
          ]
        },
        {
          "name": "list",
          "about": "List certificates for external endpoints",
          "long_about": "Returns a list of TLS certificates used for the external API (for the current Silo).  These are sorted by creation date, with the most recent certificates appearing first.",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch certificate",
          "long_about": "Returns the details of a specific certificate",
          "args": [
            {
              "long": "certificate"
            }
          ]
        }
      ]
    },
    {
      "name": "completion",
      "about": "Generate shell completion scripts for Oxide CLI commands.",
      "long_about": "Generate shell completion scripts for Oxide CLI commands.\n\nThis command generates scripts for various shells that can be used to\nenable completion.\n\n## Installation\n\n### Bash\n\nAdd this to your `~/.bash_profile`:\n\n```sh\neval \"$(oxide completion -s bash)\"\n```\n\n### Zsh\n\nGenerate an `_oxide` completion script and put it somewhere in your\n`$fpath`, for example:\n\n```sh\noxide completion -s zsh > ~/.zfunc/_oxide\n```\n\nand check that you have the following lines in your `~/.zshrc`:\n\n```sh\nautoload -U compinit\ncompinit -i\n```\n\n### Fish\n\nGenerate an `oxide.fish` completion script:\n\n```sh\noxide completion -s fish > ~/.config/fish/completions/oxide.fish\n```\n\n### PowerShell\n\nOpen your profile script with:\n\n```sh\nmkdir -Path (Split-Path -Parent $profile)\nnotepad $profile\n```\n\nAdd the following line and save the file:\n\n```powershell\nInvoke-Expression -Command $(oxide completion -s powershell | Out-String)\n```\n\n### Elvish\n\nGenerate an `oxide.elv` completion script and put it in a module search\ndirectory, for example:\n\n```sh\noxide completion -s elvish > ~/.local/share/elvish/lib/oxide.elv\n```\n\nand import this by adding the following to `~/.config/elvish/rc.elv`\n\n```\nuse oxide\n```",
      "args": [
        {
          "long": "shell",
          "short": "s",
          "values": [
            "bash",
            "elvish",
            "fish",
            "powershell",
            "zsh"
          ],
          "help": "Shell type"
        }
      ]
    },
    {
      "name": "current-user",
      "subcommands": [
        {
          "name": "groups",
          "about": "Fetch current user's groups",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "ssh-key",
          "subcommands": [
            {
              "name": "create",
              "about": "Create SSH public key",
              "long_about": "Create an SSH public key for the currently authenticated user.",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "public-key",
                  "help": "SSH public key, e.g., `\"ssh-ed25519 AAAAC3NzaC...\"`"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete SSH public key",
              "long_about": "Delete an SSH public key associated with the currently authenticated user.",
              "args": [
                {
                  "long": "ssh-key",
                  "help": "Name or ID of the SSH key"
                }
              ]
            },
            {
              "name": "list",
              "about": "List SSH public keys",
              "long_about": "Lists SSH public keys for the currently authenticated user.",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch SSH public key",
              "long_about": "Fetch SSH public key associated with the currently authenticated user.",
              "args": [
                {
                  "long": "ssh-key",
                  "help": "Name or ID of the SSH key"
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch user for current session"
        }
      ]
    },
    {
      "name": "disk",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a disk",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "size",
              "help": "total size of the Disk in bytes"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete disk",
          "args": [
            {
              "long": "disk",
              "help": "Name or ID of the disk"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "import",
          "about": "Create a disk from a file upload",
          "long_about": "Create a disk from a file upload\n\nCreate a new disk and upload the contents of a file to that disk. Use\n`--snapshot` to optionally create a snapshot of the disk after the upload is\ncomplete. If creating a snapshot, optionally use the `--image` options to\ncreate an image from that snapshot.\n\nThe start, write, stop, and finalize subcommands can be used for lower-\nlevel operations.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "disk",
              "help": "The name of the disk to create"
            },
            {
              "long": "disk-block-size",
              "values": [
                "512",
                "2048",
                "4096"
              ],
              "help": "The desired size of the disk's blocks"
            },
            {
              "long": "disk-size",
              "help": "The size of the disk to create. If unspecified, the size of the file will be used, rounded up to the nearest GB"
            },
            {
              "long": "image",
              "help": "If supplied, create an image with the given name. Requires the creation of a snapshot"
            },
            {
              "long": "image-description",
              "help": "The description for the image created out of the snapshot of this disk"
            },
            {
              "long": "image-os",
              "help": "The OS of this image (e.g. Debian)"
            },
            {
              "long": "image-version",
              "help": "The version of this image (e.g. 11, focal, a9e77e3a, 2023-04-06T14:23:34Z)"
            },
            {
              "long": "path",
              "help": "Path to the file to import"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "If supplied, create a snapshot with the given name"
            }
          ],
          "subcommands": [
            {
              "name": "finalize",
              "about": "Confirm disk block import completion",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "snapshot-name",
                  "help": "If specified a snapshot of the disk will be created with the given name during finalization. If not specified, a snapshot for the disk will _not_ be created. A snapshot can be manually created once the disk transitions into the `Detached` state."
                }
              ]
            },
            {
              "name": "start",
              "about": "Start importing blocks into disk",
              "long_about": "Start the process of importing blocks into a disk",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "stop",
              "about": "Stop importing blocks into disk",
              "long_about": "Stop the process of importing blocks into a disk",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "write",
              "about": "Import blocks into disk",
              "args": [
                {
                  "long": "base64-encoded-data"
                },
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "offset"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List disks",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "metrics",
          "subcommands": [
            {
              "name": "list",
              "about": "Fetch disk metrics",
              "args": [
                {
                  "long": "disk"
                },
                {
                  "long": "end-time",
                  "help": "An exclusive end time of metrics."
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "metric",
                  "values": [
                    "activated",
                    "flush",
                    "read",
                    "read_bytes",
                    "write",
                    "write_bytes"
                  ]
                },
                {
                  "long": "order",
                  "values": [
                    "ascending",
                    "descending"
                  ],
                  "help": "Query result order"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "start-time",
                  "help": "An inclusive start time of metrics."
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch disk",
          "args": [
            {
              "long": "disk",
              "help": "Name or ID of the disk"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "docs",
      "about": "Generate CLI docs in JSON format"
    },
    {
      "name": "experimental",
      "subcommands": [
        {
          "name": "probe",
          "subcommands": [
            {
              "name": "create",
              "about": "Create instrumentation probe",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "ip-pool"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "sled"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete instrumentation probe",
              "args": [
                {
                  "long": "probe",
                  "help": "Name or ID of the probe"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "list",
              "about": "List instrumentation probes",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "View instrumentation probe",
              "args": [
                {
                  "long": "probe",
                  "help": "Name or ID of the probe"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "timeseries",
          "subcommands": [
            {
              "name": "dashboard",
              "about": "Graph the results of an OxQL timeseries query.",
              "args": [
                {
                  "long": "interval",
                  "short": "i",
                  "help": "The interval on which to update the dashboard display, in seconds"
                }
              ]
            },
            {
              "name": "query",
              "about": "Run timeseries query",
              "long_about": "Queries are written in OxQL.",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "query",
                  "help": "A timeseries query string, written in the Oximeter query language."
                }
              ]
            },
            {
              "name": "schema",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List timeseries schemas",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "floating-ip",
      "subcommands": [
        {
          "name": "attach",
          "about": "Attach floating IP",
          "long_about": "Attach floating IP to an instance or other resource.",
          "args": [
            {
              "long": "floating-ip",
              "help": "Name or ID of the floating IP"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "kind",
              "values": [
                "instance"
              ],
              "help": "The type of `parent`'s resource"
            },
            {
              "long": "parent",
              "help": "Name or ID of the resource that this IP address should be attached to"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "create",
          "about": "Create floating IP",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "ip",
              "help": "An IP address to reserve for use as a floating IP. This field is optional: when not set, an address will be automatically chosen from `pool`. If set, then the IP must be available in the resolved `pool`."
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "pool",
              "help": "The parent IP pool that a floating IP is pulled from. If unset, the default pool is selected."
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete floating IP",
          "args": [
            {
              "long": "floating-ip",
              "help": "Name or ID of the floating IP"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "detach",
          "about": "Detach floating IP",
          "args": [
            {
              "long": "floating-ip",
              "help": "Name or ID of the floating IP"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "list",
          "about": "List floating IPs",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update floating IP",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "floating-ip",
              "help": "Name or ID of the floating IP"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch floating IP",
          "args": [
            {
              "long": "floating-ip",
              "help": "Name or ID of the floating IP"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "group",
      "subcommands": [
        {
          "name": "list",
          "about": "List groups",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "image",
      "subcommands": [
        {
          "name": "create",
          "about": "Create image",
          "long_about": "Create a new image in a project.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "os",
              "help": "The family of the operating system (e.g. Debian, Ubuntu, etc.)"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "version",
              "help": "The version of the operating system (e.g. 18.04, 20.04, etc.)"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete image",
          "long_about": "Permanently delete an image from a project. This operation cannot be undone. Any instances in the project using the image will continue to run, however new instances can not be created with this image.",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "demote",
          "about": "Demote silo image",
          "long_about": "Demote silo image to be visible only to a specified project",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "list",
          "about": "List images",
          "long_about": "List images which are global or scoped to the specified project. The images are returned sorted by creation date, with the most recent images appearing first.",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "promote",
          "about": "Promote project image",
          "long_about": "Promote project image to be visible to all projects in the silo",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch image",
          "long_about": "Fetch the details for a specific image in a project.",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "instance",
      "subcommands": [
        {
          "name": "create",
          "about": "Create instance",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "hostname"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "memory"
            },
            {
              "long": "name"
            },
            {
              "long": "ncpus"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "start",
              "values": [
                "true",
                "false"
              ],
              "help": "Should this instance be started upon creation; true by default."
            },
            {
              "long": "user-data",
              "help": "User data for instance initialization systems (such as cloud-init). Must be a Base64-encoded string, as specified in RFC 4648 § 4 (+ and / characters with padding). Maximum 32 KiB unencoded data."
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "disk",
          "subcommands": [
            {
              "name": "attach",
              "about": "Attach disk to instance",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "detach",
              "about": "Detach disk from instance",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "list",
              "about": "List disks for instance",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "external-ip",
          "subcommands": [
            {
              "name": "attach-ephemeral",
              "about": "Allocate and attach ephemeral IP to instance",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool used to allocate an address"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "detach-ephemeral",
              "about": "Detach and deallocate ephemeral IP from instance",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "list",
              "about": "List external IP addresses",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "from-image",
          "about": "Launch an instance from a disk image.",
          "args": [
            {
              "long": "description",
              "help": "Description of the instance to create"
            },
            {
              "long": "hostname",
              "help": "Hostname of the instance to create"
            },
            {
              "long": "image",
              "help": "Source image"
            },
            {
              "long": "memory",
              "help": "Instance memory e.g 32M. Suffix can be k,m,g,t"
            },
            {
              "long": "name",
              "help": "Name of the instance to create"
            },
            {
              "long": "ncpus",
              "help": "Instance CPU count"
            },
            {
              "long": "project",
              "help": "Project for image and instance"
            },
            {
              "long": "size",
              "help": "Boot disk size e.g. 512G. Suffix can be k,m,g,t"
            },
            {
              "long": "start",
              "help": "Start the instance immediately"
            }
          ]
        },
        {
          "name": "list",
          "about": "List instances",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "nic",
          "subcommands": [
            {
              "name": "create",
              "about": "Create network interface",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "ip",
                  "help": "The IP address for the interface. One will be auto-assigned if not provided."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                },
                {
                  "long": "subnet-name",
                  "help": "The VPC Subnet in which to create the interface."
                },
                {
                  "long": "vpc-name",
                  "help": "The VPC in which to create the interface."
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete network interface",
              "long_about": "Note that the primary interface for an instance cannot be deleted if there are any secondary interfaces. A new primary interface must be designated first. The primary interface can be deleted if there are no secondary interfaces.",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            },
            {
              "name": "list",
              "about": "List network interfaces",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update network interface",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "primary",
                  "values": [
                    "true",
                    "false"
                  ],
                  "help": "Make a secondary interface the instance's primary interface.\n\nIf applied to a secondary interface, that interface will become the primary on the next reboot of the instance. Note that this may have implications for routing between instances, as the new primary interface will be on a distinct subnet from the previous primary interface.\n\nNote that this can only be used to select a new primary interface for an instance. Requests to change the primary interface into a secondary will return an error."
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch network interface",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            }
          ]
        },
        {
          "name": "reboot",
          "about": "Reboot an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "serial",
          "about": "Connect to or retrieve data from the instance's serial console.",
          "subcommands": [
            {
              "name": "console",
              "about": "Connect to an instance's serial console interactively.",
              "args": [
                {
                  "long": "escape-prefix-length",
                  "help": "The number of bytes from the beginning of the escape string to pass to the VM before beginning to buffer inputs until a mismatch. Defaults to 0, such that input matching the escape string does not get sent to the VM at all until a non-matching character is typed. For example, to mimic the escape sequence for exiting SSH (\"\\n~.\"), you may pass `-e '^M~.' --escape-prefix-length=1` such that newline gets sent to the VM immediately while still continuing to match the rest of the sequence"
                },
                {
                  "long": "escape-string",
                  "short": "e",
                  "help": "If this sequence of bytes is typed, the client will exit. Defaults to \"^]^C\" (Ctrl+], Ctrl+C). Note that the string passed for this argument must be valid UTF-8, and is used verbatim without any parsing; in most shells, if you wish to include a special character (such as Enter or a Ctrl+letter combo), you can insert the character by preceding it with Ctrl+V at the command line. To disable the escape string altogether, provide an empty string to this flag (and to exit in such a case, use pkill or similar)"
                },
                {
                  "long": "instance",
                  "short": "i",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "most-recent",
                  "short": "m",
                  "help": "The number of bytes from the most recent output to retrieve as context before connecting to the interactive session directly"
                },
                {
                  "long": "project",
                  "short": "p",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "tty",
                  "short": "t",
                  "help": "Use a specified tty device (e.g. /dev/ttyUSB0) rather than the current terminal's stdin/stdout"
                }
              ]
            },
            {
              "name": "history",
              "about": "Fetch an instance's serial console output.",
              "args": [
                {
                  "long": "byte-offset",
                  "short": "b",
                  "help": "The offset since boot (or if negative, the current end of the buffered data) from which to retrieve output history. Defaults to the instance's first output from boot"
                },
                {
                  "long": "instance",
                  "short": "i",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json",
                  "short": "j",
                  "help": "Output a JSON payload of the requested bytes, and the absolute byte-offset-since-boot of the last byte retrieved, rather than formatting the output to the terminal directly"
                },
                {
                  "long": "max-bytes",
                  "short": "m",
                  "help": "Maximum number of bytes of buffered serial console contents to return. If the requested range (starting at --byte-offset) runs to the end of the available buffer, the data returned will be shorter (and if --json is provided, the actual final offset will be provided)"
                },
                {
                  "long": "project",
                  "short": "p",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "ssh-key",
          "subcommands": [
            {
              "name": "list",
              "about": "List SSH public keys for instance",
              "long_about": "List SSH public keys injected via cloud-init during instance creation. Note that this list is a snapshot in time and will not reflect updates made after the instance is created.",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "start",
          "about": "Boot instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "stop",
          "about": "Stop instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "ip-pool",
      "subcommands": [
        {
          "name": "create",
          "about": "Create IP pool",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete IP pool",
          "args": [
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        },
        {
          "name": "list",
          "about": "List IP pools",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "range",
          "subcommands": [
            {
              "name": "add",
              "about": "Add range to IP pool",
              "long_about": "IPv6 ranges are not allowed yet.",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            },
            {
              "name": "list",
              "about": "List ranges for IP pool",
              "long_about": "Ranges are ordered by their first address.",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            },
            {
              "name": "remove",
              "about": "Remove range from IP pool",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            }
          ]
        },
        {
          "name": "service",
          "subcommands": [
            {
              "name": "range",
              "subcommands": [
                {
                  "name": "add",
                  "about": "Add IP range to Oxide service pool",
                  "long_about": "IPv6 ranges are not allowed yet.",
                  "args": [
                    {
                      "long": "first"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "last"
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List IP ranges for the Oxide service pool",
                  "long_about": "Ranges are ordered by their first address.",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    }
                  ]
                }
              ]
            },
            {
              "name": "remove",
              "about": "Remove IP range from Oxide service pool",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch Oxide service IP pool"
            }
          ]
        },
        {
          "name": "silo",
          "subcommands": [
            {
              "name": "link",
              "about": "Link IP pool to silo",
              "long_about": "Users in linked silos can allocate external IPs from this pool for their instances. A silo can have at most one default pool. IPs are allocated from the default pool when users ask for one without specifying a pool.",
              "args": [
                {
                  "long": "is-default",
                  "values": [
                    "true",
                    "false"
                  ],
                  "help": "When a pool is the default for a silo, floating IPs and instance ephemeral IPs will come from that pool when no other pool is specified. There can be at most one default for a given silo."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                },
                {
                  "long": "silo"
                }
              ]
            },
            {
              "name": "list",
              "about": "List IP pool's linked silos",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "unlink",
              "about": "Unlink IP pool from silo",
              "long_about": "Will fail if there are any outstanding IPs allocated in the silo.",
              "args": [
                {
                  "long": "pool"
                },
                {
                  "long": "silo"
                }
              ]
            },
            {
              "name": "update",
              "about": "Make IP pool default for silo",
              "long_about": "When a user asks for an IP (e.g., at instance create time) without specifying a pool, the IP comes from the default pool if a default is configured. When a pool is made the default for a silo, any existing default will remain linked to the silo, but will no longer be the default.",
              "args": [
                {
                  "long": "is-default",
                  "values": [
                    "true",
                    "false"
                  ],
                  "help": "When a pool is the default for a silo, floating IPs and instance ephemeral IPs will come from that pool when no other pool is specified. There can be at most one default for a given silo, so when a pool is made default, an existing default will remain linked but will no longer be the default."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "pool"
                },
                {
                  "long": "silo"
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update IP pool",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        },
        {
          "name": "utilization",
          "about": "Fetch IP pool utilization",
          "args": [
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch IP pool",
          "args": [
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        }
      ]
    },
    {
      "name": "ping",
      "about": "Ping API",
      "long_about": "Always responds with Ok if it responds at all."
    },
    {
      "name": "policy",
      "subcommands": [
        {
          "name": "update",
          "about": "Update current silo's IAM policy",
          "args": [
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch current silo's IAM policy"
        }
      ]
    },
    {
      "name": "project",
      "subcommands": [
        {
          "name": "create",
          "about": "Create project",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete project",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "ip-pool",
          "subcommands": [
            {
              "name": "list",
              "about": "List IP pools",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch IP pool",
              "args": [
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List projects",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update project's IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch project's IAM policy",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update a project",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch project",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "silo",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a silo",
          "args": [
            {
              "long": "admin-group-name",
              "help": "If set, this group will be created during Silo creation and granted the \"Silo Admin\" role. Identity providers can assert that users belong to this group and those users can log in and further initialize the Silo.\n\nNote that if configuring a SAML based identity provider, group_attribute_name must be set for users to be considered part of a group. See `SamlIdentityProviderCreate` for more information."
            },
            {
              "long": "description"
            },
            {
              "long": "discoverable",
              "values": [
                "true",
                "false"
              ]
            },
            {
              "long": "identity-mode",
              "values": [
                "saml_jit",
                "local_only"
              ]
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a silo",
          "long_about": "Delete a silo by name or ID.",
          "args": [
            {
              "long": "silo",
              "help": "Name or ID of the silo"
            }
          ]
        },
        {
          "name": "idp",
          "subcommands": [
            {
              "name": "list",
              "about": "List a silo's IdP's name",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "local",
              "subcommands": [
                {
                  "name": "user",
                  "subcommands": [
                    {
                      "name": "create",
                      "about": "Create user",
                      "long_about": "Users can only be created in Silos with `provision_type` == `Fixed`. Otherwise, Silo users are just-in-time (JIT) provisioned when a user first logs in using an external Identity Provider.",
                      "args": [
                        {
                          "long": "external-id",
                          "help": "username used to log in"
                        },
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "about": "Delete user",
                      "args": [
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        },
                        {
                          "long": "user-id",
                          "help": "The user's internal id"
                        }
                      ]
                    },
                    {
                      "name": "set-password",
                      "about": "Set or invalidate user's password",
                      "long_about": "Passwords can only be updated for users in Silos with identity mode `LocalOnly`.",
                      "args": [
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        },
                        {
                          "long": "user-id",
                          "help": "The user's internal id"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "saml",
              "subcommands": [
                {
                  "name": "create",
                  "about": "Create SAML IdP",
                  "args": [
                    {
                      "long": "acs-url",
                      "help": "service provider endpoint where the response will be sent"
                    },
                    {
                      "long": "description"
                    },
                    {
                      "long": "group-attribute-name",
                      "help": "If set, SAML attributes with this name will be considered to denote a user's group membership, where the attribute value(s) should be a comma-separated list of group names."
                    },
                    {
                      "long": "idp-entity-id",
                      "help": "idp's entity id"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "metadata-url"
                    },
                    {
                      "long": "metadata-value"
                    },
                    {
                      "long": "name"
                    },
                    {
                      "long": "silo",
                      "help": "Name or ID of the silo"
                    },
                    {
                      "long": "slo-url",
                      "help": "service provider endpoint where the idp should send log out requests"
                    },
                    {
                      "long": "sp-client-id",
                      "help": "sp's client id"
                    },
                    {
                      "long": "technical-contact-email",
                      "help": "customer's technical contact for saml configuration"
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch SAML IdP",
                  "args": [
                    {
                      "long": "provider",
                      "help": "Name or ID of the SAML identity provider"
                    },
                    {
                      "long": "silo",
                      "help": "Name or ID of the silo"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ip-pool",
          "subcommands": [
            {
              "name": "list",
              "about": "List IP pools linked to silo",
              "long_about": "Linked IP pools are available to users in the specified silo. A silo can have at most one default pool. IPs are allocated from the default pool when users ask for one without specifying a pool.",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List silos",
          "long_about": "Lists silos that are discoverable based on the current permissions.",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update silo IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch silo IAM policy",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            }
          ]
        },
        {
          "name": "quotas",
          "subcommands": [
            {
              "name": "list",
              "about": "Lists resource quotas for all silos",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update resource quotas for silo",
              "long_about": "If a quota value is not specified, it will remain unchanged.",
              "args": [
                {
                  "long": "cpus",
                  "help": "The amount of virtual CPUs available for running instances in the Silo"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "memory",
                  "help": "The amount of RAM (in bytes) available for running instances in the Silo"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "storage",
                  "help": "The amount of storage (in bytes) available for disks or snapshots"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch resource quotas for silo",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            }
          ]
        },
        {
          "name": "user",
          "subcommands": [
            {
              "name": "list",
              "about": "List built-in (system) users in silo",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch built-in (system) user",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "user-id",
                  "help": "The user's internal id"
                }
              ]
            }
          ]
        },
        {
          "name": "utilization",
          "subcommands": [
            {
              "name": "list",
              "about": "List current utilization state for all silos",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch current utilization for given silo",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch silo",
          "long_about": "Fetch silo by name or ID.",
          "args": [
            {
              "long": "silo",
              "help": "Name or ID of the silo"
            }
          ]
        }
      ]
    },
    {
      "name": "snapshot",
      "subcommands": [
        {
          "name": "create",
          "about": "Create snapshot",
          "long_about": "Creates a point-in-time snapshot from a disk.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "disk",
              "help": "The disk to be snapshotted"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete snapshot",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "Name or ID of the snapshot"
            }
          ]
        },
        {
          "name": "list",
          "about": "List snapshots",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch snapshot",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "Name or ID of the snapshot"
            }
          ]
        }
      ]
    },
    {
      "name": "system",
      "subcommands": [
        {
          "name": "hardware",
          "subcommands": [
            {
              "name": "disk",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List physical disks",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Get a physical disk",
                  "args": [
                    {
                      "long": "disk-id",
                      "help": "ID of the physical disk"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rack",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List racks",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch rack",
                  "args": [
                    {
                      "long": "rack-id",
                      "help": "The rack's unique ID."
                    }
                  ]
                }
              ]
            },
            {
              "name": "sled",
              "subcommands": [
                {
                  "name": "add",
                  "about": "Add sled to initialized rack",
                  "args": [
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "part"
                    },
                    {
                      "long": "serial"
                    }
                  ]
                },
                {
                  "name": "disk-led",
                  "about": "List physical disks attached to sleds",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sled-id",
                      "help": "ID of the sled"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "instance-list",
                  "about": "List instances running on given sled",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sled-id",
                      "help": "ID of the sled"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List sleds",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "list-uninitialized",
                  "about": "List uninitialized sleds",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    }
                  ]
                },
                {
                  "name": "set-provision-policy",
                  "about": "Set sled provision policy",
                  "args": [
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "sled-id",
                      "help": "ID of the sled"
                    },
                    {
                      "long": "state",
                      "values": [
                        "provisionable",
                        "non_provisionable"
                      ],
                      "help": "The provision state."
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch sled",
                  "args": [
                    {
                      "long": "sled-id",
                      "help": "ID of the sled"
                    }
                  ]
                }
              ]
            },
            {
              "name": "switch",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List switches",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch switch",
                  "args": [
                    {
                      "long": "switch-id",
                      "help": "ID of the switch"
                    }
                  ]
                }
              ]
            },
            {
              "name": "switch-port",
              "subcommands": [
                {
                  "name": "apply-settings",
                  "about": "Apply switch port settings",
                  "args": [
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "port",
                      "help": "A name to use when selecting switch ports."
                    },
                    {
                      "long": "port-settings",
                      "help": "A name or id to use when applying switch port settings."
                    },
                    {
                      "long": "rack-id",
                      "help": "A rack id to use when selecting switch ports."
                    },
                    {
                      "long": "switch-location",
                      "help": "A switch location to use when selecting switch ports."
                    }
                  ]
                },
                {
                  "name": "clear-settings",
                  "about": "Clear switch port settings",
                  "args": [
                    {
                      "long": "port",
                      "help": "A name to use when selecting switch ports."
                    },
                    {
                      "long": "rack-id",
                      "help": "A rack id to use when selecting switch ports."
                    },
                    {
                      "long": "switch-location",
                      "help": "A switch location to use when selecting switch ports."
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List switch ports",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    },
                    {
                      "long": "switch-port-id",
                      "help": "An optional switch port id to use when listing switch ports."
                    }
                  ]
                },
                {
                  "name": "status",
                  "about": "Get switch port status",
                  "args": [
                    {
                      "long": "port",
                      "help": "A name to use when selecting switch ports."
                    },
                    {
                      "long": "rack-id",
                      "help": "A rack id to use when selecting switch ports."
                    },
                    {
                      "long": "switch-location",
                      "help": "A switch location to use when selecting switch ports."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "networking",
          "subcommands": [
            {
              "name": "address-lot",
              "subcommands": [
                {
                  "name": "block",
                  "subcommands": [
                    {
                      "name": "list",
                      "about": "List blocks in address lot",
                      "args": [
                        {
                          "long": "address-lot",
                          "help": "Name or ID of the address lot"
                        },
                        {
                          "long": "limit",
                          "help": "Maximum number of items returned by a single call"
                        },
                        {
                          "long": "sort-by",
                          "values": [
                            "id_ascending"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "create",
                  "about": "Create address lot",
                  "args": [
                    {
                      "long": "description"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "kind",
                      "values": [
                        "infra",
                        "pool"
                      ],
                      "help": "The kind of address lot to create."
                    },
                    {
                      "long": "name"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "about": "Delete address lot",
                  "args": [
                    {
                      "long": "address-lot",
                      "help": "Name or ID of the address lot"
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List address lots",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "name_ascending",
                        "name_descending",
                        "id_ascending"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "bfd",
              "subcommands": [
                {
                  "name": "disable",
                  "about": "Disable a BFD session",
                  "args": [
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "remote",
                      "help": "Address of the remote peer to disable a BFD session for."
                    },
                    {
                      "long": "switch",
                      "help": "The switch to enable this session on. Must be `switch0` or `switch1`."
                    }
                  ]
                },
                {
                  "name": "enable",
                  "about": "Enable a BFD session",
                  "args": [
                    {
                      "long": "detection-threshold",
                      "help": "The negotiated Control packet transmission interval, multiplied by this variable, will be the Detection Time for this session (as seen by the remote system)"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "local",
                      "help": "Address the Oxide switch will listen on for BFD traffic. If `None` then the unspecified address (0.0.0.0 or ::) is used."
                    },
                    {
                      "long": "mode",
                      "values": [
                        "single_hop",
                        "multi_hop"
                      ],
                      "help": "Select either single-hop (RFC 5881) or multi-hop (RFC 5883)"
                    },
                    {
                      "long": "remote",
                      "help": "Address of the remote peer to establish a BFD session with."
                    },
                    {
                      "long": "required-rx",
                      "help": "The minimum interval, in microseconds, between received BFD Control packets that this system requires"
                    },
                    {
                      "long": "switch",
                      "help": "The switch to enable this session on. Must be `switch0` or `switch1`."
                    }
                  ]
                },
                {
                  "name": "status",
                  "about": "Get BFD status"
                }
              ]
            },
            {
              "name": "bgp",
              "subcommands": [
                {
                  "name": "announce-set",
                  "subcommands": [
                    {
                      "name": "create",
                      "about": "Create new BGP announce set",
                      "args": [
                        {
                          "long": "description"
                        },
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "name"
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "about": "Delete BGP announce set",
                      "args": [
                        {
                          "long": "name-or-id",
                          "help": "A name or id to use when selecting BGP port settings"
                        }
                      ]
                    },
                    {
                      "name": "list",
                      "about": "Get originated routes for a BGP configuration",
                      "args": [
                        {
                          "long": "name-or-id",
                          "help": "A name or id to use when selecting BGP port settings"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "config",
                  "subcommands": [
                    {
                      "name": "create",
                      "about": "Create new BGP configuration",
                      "args": [
                        {
                          "long": "asn",
                          "help": "The autonomous system number of this BGP configuration."
                        },
                        {
                          "long": "bgp-announce-set-id"
                        },
                        {
                          "long": "description"
                        },
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "name"
                        },
                        {
                          "long": "vrf",
                          "help": "Optional virtual routing and forwarding identifier for this BGP configuration."
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "about": "Delete BGP configuration",
                      "args": [
                        {
                          "long": "name-or-id",
                          "help": "A name or id to use when selecting BGP config."
                        }
                      ]
                    },
                    {
                      "name": "list",
                      "about": "List BGP configurations",
                      "args": [
                        {
                          "long": "limit",
                          "help": "Maximum number of items returned by a single call"
                        },
                        {
                          "long": "name-or-id",
                          "help": "A name or id to use when selecting BGP config."
                        },
                        {
                          "long": "sort-by",
                          "values": [
                            "name_ascending",
                            "name_descending",
                            "id_ascending"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "history",
                  "about": "Get BGP router message history",
                  "args": [
                    {
                      "long": "asn",
                      "help": "The ASN to filter on. Required."
                    }
                  ]
                },
                {
                  "name": "imported",
                  "subcommands": [
                    {
                      "name": "ipv4",
                      "about": "Get imported IPv4 BGP routes",
                      "args": [
                        {
                          "long": "asn",
                          "help": "The ASN to filter on. Required."
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "status",
                  "about": "Get BGP peer status"
                }
              ]
            },
            {
              "name": "loopback-address",
              "subcommands": [
                {
                  "name": "create",
                  "about": "Create loopback address",
                  "args": [
                    {
                      "long": "address",
                      "help": "The address to create."
                    },
                    {
                      "long": "address-lot",
                      "help": "The name or id of the address lot this loopback address will pull an address from."
                    },
                    {
                      "long": "anycast",
                      "values": [
                        "true",
                        "false"
                      ],
                      "help": "Address is an anycast address. This allows the address to be assigned to multiple locations simultaneously."
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "mask",
                      "help": "The subnet mask to use for the address."
                    },
                    {
                      "long": "rack-id",
                      "help": "The containing the switch this loopback address will be configured on."
                    },
                    {
                      "long": "switch-location",
                      "help": "The location of the switch within the rack this loopback address will be configured on."
                    }
                  ]
                },
                {
                  "name": "delete",
                  "about": "Delete loopback address",
                  "args": [
                    {
                      "long": "address",
                      "help": "The IP address and subnet mask to use when selecting the loopback address."
                    },
                    {
                      "long": "rack-id",
                      "help": "The rack to use when selecting the loopback address."
                    },
                    {
                      "long": "subnet-mask",
                      "help": "The IP address and subnet mask to use when selecting the loopback address."
                    },
                    {
                      "long": "switch-location",
                      "help": "The switch location to use when selecting the loopback address."
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List loopback addresses",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "id_ascending"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "switch-port-settings",
              "subcommands": [
                {
                  "name": "create",
                  "about": "Create switch port settings",
                  "args": [
                    {
                      "long": "description"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "name"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "about": "Delete switch port settings",
                  "args": [
                    {
                      "long": "port-settings",
                      "help": "An optional name or id to use when selecting port settings."
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List switch port settings",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "port-settings",
                      "help": "An optional name or id to use when selecting port settings."
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "name_ascending",
                        "name_descending",
                        "id_ascending"
                      ]
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Get information about switch port",
                  "args": [
                    {
                      "long": "port",
                      "help": "A name or id to use when selecting switch port settings info objects."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update top-level IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch top-level IAM policy"
            }
          ]
        }
      ]
    },
    {
      "name": "user",
      "subcommands": [
        {
          "name": "list",
          "about": "List users",
          "args": [
            {
              "long": "group"
            },
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "utilization",
      "about": "Fetch resource utilization for user's current silo"
    },
    {
      "name": "version",
      "about": "Prints version information about the CLI."
    },
    {
      "name": "vpc",
      "subcommands": [
        {
          "name": "create",
          "about": "Create VPC",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "dns-name"
            },
            {
              "long": "ipv6-prefix",
              "help": "The IPv6 prefix for this VPC\n\nAll IPv6 subnets created from this VPC must be taken from this range, which should be a Unique Local Address in the range `fd00::/48`. The default VPC Subnet will have the first `/64` range from this prefix."
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete VPC",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        },
        {
          "name": "firewall-rules",
          "subcommands": [
            {
              "name": "update",
              "about": "Replace firewall rules",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "view",
              "about": "List firewall rules",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List VPCs",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "subnet",
          "subcommands": [
            {
              "name": "create",
              "about": "Create subnet",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "ipv4-block",
                  "help": "The IPv4 address range for this subnet.\n\nIt must be allocated from an RFC 1918 private address range, and must not overlap with any other existing subnet in the VPC."
                },
                {
                  "long": "ipv6-block",
                  "help": "The IPv6 address range for this subnet.\n\nIt must be allocated from the RFC 4193 Unique Local Address range, with the prefix equal to the parent VPC's prefix. A random `/64` block will be assigned if one is not provided. It must not overlap with any existing subnet in the VPC."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete subnet",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "list",
              "about": "List subnets",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "nic",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List network interfaces",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "name_ascending",
                        "name_descending",
                        "id_ascending"
                      ]
                    },
                    {
                      "long": "subnet",
                      "help": "Name or ID of the subnet"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC"
                    }
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update subnet",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch subnet",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update a VPC",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "dns-name"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch VPC",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        }
      ]
    }
  ]
}
