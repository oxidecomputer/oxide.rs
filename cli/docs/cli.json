{
  "name": "oxide",
  "version": "0.1.0",
  "args": [
    {
      "long": "config-dir"
    },
    {
      "long": "debug"
    }
  ],
  "subcommands": [
    {
      "name": "api",
      "about": "Makes an authenticated HTTP request to the Oxide API and prints the response.",
      "long_about": "Makes an authenticated HTTP request to the Oxide API and prints the response.\n\nThe endpoint argument should be a path of a Oxide API endpoint.\n\nThe default HTTP request method is \"GET\" normally and \"POST\" if any\nparameters were added. Override the method with `--method`.\n\nPass one or more `-f/--raw-field` values in \"key=value\" format to add\nstatic string parameters to the request payload. To add non-string or\notherwise dynamic values, see `--field` below. Note that adding request\nparameters will automatically switch the request method to POST. To send\nthe parameters as a GET query string instead, use `--method GET`.\n\nThe `-F/--field` flag has magic type conversion based on the format of the\nvalue:\n\n- literal values \"true\", \"false\", \"null\", and integer/float numbers get\n  converted to appropriate JSON types;\n- if the value starts with \"@\", the rest of the value is interpreted as a\n  filename to read the value from. Pass \"-\" to read from standard input.\n\nRaw request body may be passed from the outside via a file specified by\n`--input`. Pass \"-\" to read from standard input. In this mode, parameters\nspecified via `--field` flags are serialized into URL query parameters.\n\nIn `--paginate` mode, all pages of results will sequentially be requested\nuntil there are no more pages of results.",
      "args": [
        {
          "long": "field",
          "short": "F",
          "help": "Add a typed parameter in key=value format"
        },
        {
          "long": "header",
          "short": "H",
          "help": "Add a HTTP request header in `key:value` format"
        },
        {
          "long": "include",
          "short": "i",
          "help": "Include HTTP response headers in the output"
        },
        {
          "long": "input",
          "help": "The file to use as body for the HTTP request (use \"-\" to read from standard input)"
        },
        {
          "long": "limit",
          "help": "Limit the number of paginated items retrieved"
        },
        {
          "long": "method",
          "short": "X",
          "help": "The HTTP method for the request"
        },
        {
          "long": "paginate",
          "help": "Make additional HTTP requests to fetch all pages of results"
        },
        {
          "long": "raw-field",
          "short": "f",
          "help": "Add a string parameter in key=value format"
        }
      ]
    },
    {
      "name": "auth",
      "about": "Login, logout, and get the status of your authentication.",
      "long_about": "Login, logout, and get the status of your authentication.\n\nManage `oxide`'s authentication state.",
      "subcommands": [
        {
          "name": "login",
          "about": "Authenticate with an Oxide host.",
          "long_about": "Authenticate with an Oxide host.\n\nAlternatively, pass in a token on standard input by using `--with-token`.\n\n    # start interactive setup\n    $ oxide auth login\n\n    # authenticate against a specific Oxide instance by reading the token\n    # from a file\n    $ oxide auth login --with-token --host oxide.internal < mytoken.txt\n\n    # authenticate with a specific Oxide instance\n    $ oxide auth login --host oxide.internal\n\n    # authenticate with an insecure Oxide instance (not recommended)\n    $ oxide auth login --host http://oxide.internal",
          "args": [
            {
              "long": "browser",
              "help": "Override the default browser when opening the authentication URL"
            },
            {
              "long": "host",
              "short": "H",
              "help": "The host of the Oxide instance to authenticate with. This assumes http; specify an `http://` prefix if needed"
            },
            {
              "long": "no-browser",
              "help": "Print the authentication URL rather than opening a browser window"
            },
            {
              "long": "with-token",
              "help": "Read token from standard input"
            }
          ]
        },
        {
          "name": "logout",
          "about": "Removes saved authentication information.",
          "long_about": "Removes saved authentication information.\n\nThis command does not invalidate any tokens from the hosts.",
          "args": [
            {
              "long": "all",
              "short": "a",
              "help": "If set, all known hosts and authentication information will be deleted"
            },
            {
              "long": "force",
              "short": "f",
              "help": "Skip confirmation prompt"
            },
            {
              "long": "host",
              "short": "H",
              "help": "Remove authentication information for a single host"
            }
          ]
        },
        {
          "name": "status",
          "about": "Verifies and displays information about your authentication state.",
          "long_about": "Verifies and displays information about your authentication state.\n\nThis command validates the authentication state for each Oxide environment\nin the current configuration. These hosts may be from your hosts.toml file\nand/or $OXIDE_HOST environment variable.",
          "args": [
            {
              "long": "host",
              "short": "H",
              "help": "Specific hostname to validate"
            },
            {
              "long": "show-token",
              "short": "t",
              "help": "Display the auth token"
            }
          ]
        }
      ]
    },
    {
      "name": "certificate",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a new system-wide x.509 certificate",
          "long_about": "This certificate is automatically used by the Oxide Control plane to serve external connections.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "service",
              "values": [
                "external_api"
              ],
              "help": "The service using this certificate"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a certificate",
          "long_about": "Permanently delete a certificate. This operation cannot be undone.",
          "args": [
            {
              "long": "certificate"
            }
          ]
        },
        {
          "name": "list",
          "about": "List certificates for external endpoints",
          "long_about": "Returns a list of TLS certificates used for the external API (for the current Silo).  These are sorted by creation date, with the most recent certificates appearing first.",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a certificate",
          "long_about": "Returns the details of a specific certificate",
          "args": [
            {
              "long": "certificate"
            }
          ]
        }
      ]
    },
    {
      "name": "current-user",
      "subcommands": [
        {
          "name": "groups",
          "about": "Fetch the siloÂ groups the current user belongs to",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "ssh-key",
          "subcommands": [
            {
              "name": "create",
              "about": "Create an SSH public key",
              "long_about": "Create an SSH public key for the currently authenticated user.",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "public-key",
                  "help": "SSH public key, e.g., `\"ssh-ed25519 AAAAC3NzaC...\"`"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete an SSH public key",
              "long_about": "Delete an SSH public key associated with the currently authenticated user.",
              "args": [
                {
                  "long": "ssh-key",
                  "help": "Name or ID of the SSH key"
                }
              ]
            },
            {
              "name": "list",
              "about": "List SSH public keys",
              "long_about": "Lists SSH public keys for the currently authenticated user.",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch an SSH public key",
              "long_about": "Fetch an SSH public key associated with the currently authenticated user.",
              "args": [
                {
                  "long": "ssh-key",
                  "help": "Name or ID of the SSH key"
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch the user associated with the current session"
        }
      ]
    },
    {
      "name": "disk",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a disk",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "size",
              "help": "total size of the Disk in bytes"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a disk",
          "args": [
            {
              "long": "disk",
              "help": "Name or ID of the disk"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "import",
          "about": "Create a disk from a file upload",
          "long_about": "Create a disk from a file upload\n\nCreate a new disk and upload the contents of a file to that disk. Use\n`--snapshot` to optionally create a snapshot of the disk after the upload is\ncomplete. If creating a snapshot, optionally use the `--image` options to\ncreate an image from that snapshot.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "disk",
              "help": "The name of the disk to create"
            },
            {
              "long": "disk-block-size",
              "help": "The desired size of the disk's blocks"
            },
            {
              "long": "disk-size",
              "help": "The size of the disk to create. If unspecified, the size of the file will be used, rounded up to the nearest GB"
            },
            {
              "long": "image",
              "help": "If supplied, create an image with the given name. Requires the creation of a snapshot"
            },
            {
              "long": "image-description",
              "help": "The description for the image created out of the snapshot of this disk"
            },
            {
              "long": "image-os",
              "help": "The OS of this image (e.g. Debian)"
            },
            {
              "long": "image-version",
              "help": "The version of this image (e.g. 11, focal, a9e77e3a, 2023-04-06T14:23:34Z)"
            },
            {
              "long": "path",
              "help": "Path to the file to import"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "If supplied, create a snapshot with the given name"
            }
          ]
        },
        {
          "name": "list",
          "about": "List disks",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "metrics",
          "subcommands": [
            {
              "name": "list",
              "about": "Fetch disk metrics",
              "args": [
                {
                  "long": "disk"
                },
                {
                  "long": "end-time",
                  "help": "An exclusive end time of metrics."
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "metric",
                  "values": [
                    "activated",
                    "flush",
                    "read",
                    "read_bytes",
                    "write",
                    "write_bytes"
                  ]
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "start-time",
                  "help": "An inclusive start time of metrics."
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a disk",
          "args": [
            {
              "long": "disk",
              "help": "Name or ID of the disk"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "docs",
      "about": "Generate CLI docs in JSON format"
    },
    {
      "name": "group",
      "subcommands": [
        {
          "name": "list",
          "about": "List groups",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "hardware",
      "subcommands": [
        {
          "name": "disk",
          "subcommands": [
            {
              "name": "list",
              "about": "List physical disks",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "rack",
          "subcommands": [
            {
              "name": "list",
              "about": "List racks",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a rack",
              "args": [
                {
                  "long": "rack-id",
                  "help": "The rack's unique ID."
                }
              ]
            }
          ]
        },
        {
          "name": "sled",
          "subcommands": [
            {
              "name": "disk-led",
              "about": "List physical disks attached to sleds",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sled-id",
                  "help": "ID of the sled"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "instance-list",
              "about": "List instances running on a given sled",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sled-id",
                  "help": "ID of the sled"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "list",
              "about": "List sleds",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a sled",
              "args": [
                {
                  "long": "sled-id",
                  "help": "ID of the sled"
                }
              ]
            }
          ]
        },
        {
          "name": "switch",
          "subcommands": [
            {
              "name": "list",
              "about": "List switches",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a switch",
              "args": [
                {
                  "long": "switch-id",
                  "help": "ID of the switch"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "image",
      "subcommands": [
        {
          "name": "create",
          "about": "Create an image",
          "long_about": "Create a new image in a project.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "os",
              "help": "The family of the operating system (e.g. Debian, Ubuntu, etc.)"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "version",
              "help": "The version of the operating system (e.g. 18.04, 20.04, etc.)"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete an image",
          "long_about": "Permanently delete an image from a project. This operation cannot be undone. Any instances in the project using the image will continue to run, however new instances can not be created with this image.",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "demote",
          "about": "Demote a silo image",
          "long_about": "Demote a silo image to be visible only to a specified project",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "list",
          "about": "List images",
          "long_about": "List images which are global or scoped to the specified project. The images are returned sorted by creation date, with the most recent images appearing first.",
          "args": [
            {
              "long": "include-silo-images",
              "values": [
                "true",
                "false"
              ],
              "help": "Flag used to indicate if silo scoped images should be included when listing project images. Only valid when `project` is provided."
            },
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "promote",
          "about": "Promote a project image",
          "long_about": "Promote a project image to be visible to all projects in the silo",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch an image",
          "long_about": "Fetch the details for a specific image in a project.",
          "args": [
            {
              "long": "image",
              "help": "Name or ID of the image"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "instance",
      "subcommands": [
        {
          "name": "create",
          "about": "Create an instance",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "hostname"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "memory"
            },
            {
              "long": "name"
            },
            {
              "long": "ncpus"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "start",
              "values": [
                "true",
                "false"
              ],
              "help": "Should this instance be started upon creation; true by default."
            },
            {
              "long": "user-data",
              "help": "User data for instance initialization systems (such as cloud-init). Must be a Base64-encoded string, as specified in RFC 4648 Â§ 4 (+ and / characters with padding). Maximum 32 KiB unencoded data."
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "disk",
          "subcommands": [
            {
              "name": "attach",
              "about": "Attach a disk to an instance",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "detach",
              "about": "Detach a disk from an instance",
              "args": [
                {
                  "long": "disk",
                  "help": "Name or ID of the disk"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "list",
              "about": "List an instance's disks",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "external-ip",
          "subcommands": [
            {
              "name": "list",
              "about": "List external IP addresses",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List instances",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "nic",
          "subcommands": [
            {
              "name": "create",
              "about": "Create a network interface",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "ip",
                  "help": "The IP address for the interface. One will be auto-assigned if not provided."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                },
                {
                  "long": "subnet-name",
                  "help": "The VPC Subnet in which to create the interface."
                },
                {
                  "long": "vpc-name",
                  "help": "The VPC in which to create the interface."
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete a network interface",
              "long_about": "Note that the primary interface for an instance cannot be deleted if there are any secondary interfaces. A new primary interface must be designated first. The primary interface can be deleted if there are no secondary interfaces.",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            },
            {
              "name": "list",
              "about": "List network interfaces",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update a network interface",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "primary",
                  "values": [
                    "true",
                    "false"
                  ],
                  "help": "Make a secondary interface the instance's primary interface.\n\nIf applied to a secondary interface, that interface will become the primary on the next reboot of the instance. Note that this may have implications for routing between instances, as the new primary interface will be on a distinct subnet from the previous primary interface.\n\nNote that this can only be used to select a new primary interface for an instance. Requests to change the primary interface into a secondary will return an error."
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a network interface",
              "args": [
                {
                  "long": "instance",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "interface",
                  "help": "Name or ID of the network interface"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `instance` is provided as a `Name`"
                }
              ]
            }
          ]
        },
        {
          "name": "reboot",
          "about": "Reboot an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "serial",
          "about": "Connect to or retrieve data from the instance's serial console.",
          "subcommands": [
            {
              "name": "console",
              "about": "Connect to an instance's serial console interactively.",
              "args": [
                {
                  "long": "escape-prefix-length",
                  "help": "The number of bytes from the beginning of the escape string to pass to the VM before beginning to buffer inputs until a mismatch. Defaults to 0, such that input matching the escape string does not get sent to the VM at all until a non-matching character is typed. For example, to mimic the escape sequence for exiting SSH (\"\\n~.\"), you may pass `-e '^M~.' --escape-prefix-length=1` such that newline gets sent to the VM immediately while still continuing to match the rest of the sequence"
                },
                {
                  "long": "escape-string",
                  "short": "e",
                  "help": "If this sequence of bytes is typed, the client will exit. Defaults to \"^]^C\" (Ctrl+], Ctrl+C). Note that the string passed for this argument must be valid UTF-8, and is used verbatim without any parsing; in most shells, if you wish to include a special character (such as Enter or a Ctrl+letter combo), you can insert the character by preceding it with Ctrl+V at the command line. To disable the escape string altogether, provide an empty string to this flag (and to exit in such a case, use pkill or similar)"
                },
                {
                  "long": "instance",
                  "short": "i",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "most-recent",
                  "short": "m",
                  "help": "The number of bytes from the most recent output to retrieve as context before connecting to the interactive session directly"
                },
                {
                  "long": "project",
                  "short": "p",
                  "help": "Name or ID of the project"
                },
                {
                  "long": "tty",
                  "short": "t",
                  "help": "Use a specified tty device (e.g. /dev/ttyUSB0) rather than the current terminal's stdin/stdout"
                }
              ]
            },
            {
              "name": "history",
              "about": "Fetch an instance's serial console output.",
              "args": [
                {
                  "long": "byte-offset",
                  "short": "b",
                  "help": "The offset since boot (or if negative, the current end of the buffered data) from which to retrieve output history. Defaults to the instance's first output from boot"
                },
                {
                  "long": "instance",
                  "short": "i",
                  "help": "Name or ID of the instance"
                },
                {
                  "long": "json",
                  "short": "j",
                  "help": "Output a JSON payload of the requested bytes, and the absolute byte-offset-since-boot of the last byte retrieved, rather than formatting the output to the terminal directly"
                },
                {
                  "long": "max-bytes",
                  "short": "m",
                  "help": "Maximum number of bytes of buffered serial console contents to return. If the requested range (starting at --byte-offset) runs to the end of the available buffer, the data returned will be shorter (and if --json is provided, the actual final offset will be provided)"
                },
                {
                  "long": "project",
                  "short": "p",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "start",
          "about": "Boot an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "stop",
          "about": "Stop an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch an instance",
          "args": [
            {
              "long": "instance",
              "help": "Name or ID of the instance"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "ip-pool",
      "subcommands": [
        {
          "name": "create",
          "about": "Create an IP pool",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete an IP Pool",
          "args": [
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        },
        {
          "name": "list",
          "about": "List IP pools",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "range",
          "subcommands": [
            {
              "name": "add",
              "about": "Add a range to an IP pool",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            },
            {
              "name": "list",
              "about": "List ranges for an IP pool",
              "long_about": "List ranges for an IP pool. Ranges are ordered by their first address.",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            },
            {
              "name": "remove",
              "about": "Remove a range from an IP pool",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                },
                {
                  "long": "pool",
                  "help": "Name or ID of the IP pool"
                }
              ]
            }
          ]
        },
        {
          "name": "service",
          "subcommands": [
            {
              "name": "range",
              "subcommands": [
                {
                  "name": "add",
                  "about": "Add a range to an IP pool used for Oxide services",
                  "args": [
                    {
                      "long": "first"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "last"
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List ranges for the IP pool used for Oxide services",
                  "long_about": "List ranges for the IP pool used for Oxide services. Ranges are ordered by their first address.",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    }
                  ]
                }
              ]
            },
            {
              "name": "remove",
              "about": "Remove a range from an IP pool used for Oxide services",
              "args": [
                {
                  "long": "first"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "last"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch the IP pool used for Oxide services"
            }
          ]
        },
        {
          "name": "update",
          "about": "Update an IP Pool",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch an IP pool",
          "args": [
            {
              "long": "pool",
              "help": "Name or ID of the IP pool"
            }
          ]
        }
      ]
    },
    {
      "name": "policy",
      "subcommands": [
        {
          "name": "update",
          "about": "Update the current silo's IAM policy",
          "args": [
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch the current silo's IAM policy"
        }
      ]
    },
    {
      "name": "project",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a project",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a project",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "list",
          "about": "List projects",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update a project's IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a project's IAM policy",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project"
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update a project",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a project",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        }
      ]
    },
    {
      "name": "silo",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a silo",
          "args": [
            {
              "long": "admin-group-name",
              "help": "If set, this group will be created during Silo creation and granted the \"Silo Admin\" role. Identity providers can assert that users belong to this group and those users can log in and further initialize the Silo.\n\nNote that if configuring a SAML based identity provider, group_attribute_name must be set for users to be considered part of a group. See `SamlIdentityProviderCreate` for more information."
            },
            {
              "long": "description"
            },
            {
              "long": "discoverable",
              "values": [
                "true",
                "false"
              ]
            },
            {
              "long": "identity-mode",
              "values": [
                "saml_jit",
                "local_only"
              ]
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a silo",
          "long_about": "Delete a silo by name.",
          "args": [
            {
              "long": "silo",
              "help": "Name or ID of the silo"
            }
          ]
        },
        {
          "name": "idp",
          "subcommands": [
            {
              "name": "list",
              "about": "List a silo's IdP's name",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "local",
              "subcommands": [
                {
                  "name": "user",
                  "subcommands": [
                    {
                      "name": "create",
                      "about": "Create a user",
                      "long_about": "Users can only be created in Silos with `provision_type` == `Fixed`. Otherwise, Silo users are just-in-time (JIT) provisioned when a user first logs in using an external Identity Provider.",
                      "args": [
                        {
                          "long": "external-id",
                          "help": "username used to log in"
                        },
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "about": "Delete a user",
                      "args": [
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        },
                        {
                          "long": "user-id",
                          "help": "The user's internal id"
                        }
                      ]
                    },
                    {
                      "name": "set-password",
                      "about": "Set or invalidate a user's password",
                      "long_about": "Passwords can only be updated for users in Silos with identity mode `LocalOnly`.",
                      "args": [
                        {
                          "long": "json-body",
                          "help": "Path to a file that contains the full json body."
                        },
                        {
                          "long": "json-body-template",
                          "help": "XXX"
                        },
                        {
                          "long": "silo",
                          "help": "Name or ID of the silo"
                        },
                        {
                          "long": "user-id",
                          "help": "The user's internal id"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "saml",
              "subcommands": [
                {
                  "name": "create",
                  "about": "Create a SAML IdP",
                  "args": [
                    {
                      "long": "acs-url",
                      "help": "service provider endpoint where the response will be sent"
                    },
                    {
                      "long": "description"
                    },
                    {
                      "long": "group-attribute-name",
                      "help": "If set, SAML attributes with this name will be considered to denote a user's group membership, where the attribute value(s) should be a comma-separated list of group names."
                    },
                    {
                      "long": "idp-entity-id",
                      "help": "idp's entity id"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "metadata-url"
                    },
                    {
                      "long": "metadata-value"
                    },
                    {
                      "long": "name"
                    },
                    {
                      "long": "silo",
                      "help": "Name or ID of the silo"
                    },
                    {
                      "long": "slo-url",
                      "help": "service provider endpoint where the idp should send log out requests"
                    },
                    {
                      "long": "sp-client-id",
                      "help": "sp's client id"
                    },
                    {
                      "long": "technical-contact-email",
                      "help": "customer's technical contact for saml configuration"
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch a SAML IdP",
                  "args": [
                    {
                      "long": "provider",
                      "help": "Name or ID of the SAML identity provider"
                    },
                    {
                      "long": "silo",
                      "help": "Name or ID of the silo"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List silos",
          "long_about": "Lists silos that are discoverable based on the current permissions.",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update a silo's IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a silo's IAM policy",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                }
              ]
            }
          ]
        },
        {
          "name": "user",
          "subcommands": [
            {
              "name": "list",
              "about": "List users in a silo",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "id_ascending"
                  ]
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a user",
              "args": [
                {
                  "long": "silo",
                  "help": "Name or ID of the silo"
                },
                {
                  "long": "user-id",
                  "help": "The user's internal id"
                }
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a silo",
          "long_about": "Fetch a silo by name.",
          "args": [
            {
              "long": "silo",
              "help": "Name or ID of the silo"
            }
          ]
        }
      ]
    },
    {
      "name": "snapshot",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a snapshot",
          "long_about": "Creates a point-in-time snapshot from a disk.",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "disk",
              "help": "The name of the disk to be snapshotted"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a snapshot",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "Name or ID of the snapshot"
            }
          ]
        },
        {
          "name": "list",
          "about": "List snapshots",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a snapshot",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "snapshot",
              "help": "Name or ID of the snapshot"
            }
          ]
        }
      ]
    },
    {
      "name": "system",
      "subcommands": [
        {
          "name": "policy",
          "subcommands": [
            {
              "name": "update",
              "about": "Update the top-level IAM policy",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch the top-level IAM policy"
            }
          ]
        }
      ]
    },
    {
      "name": "user",
      "subcommands": [
        {
          "name": "list",
          "about": "List users",
          "args": [
            {
              "long": "group"
            },
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "sort-by",
              "values": [
                "id_ascending"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "version",
      "about": "Prints version information about the CLI."
    },
    {
      "name": "vpc",
      "subcommands": [
        {
          "name": "create",
          "about": "Create a VPC",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "dns-name"
            },
            {
              "long": "ipv6-prefix",
              "help": "The IPv6 prefix for this VPC\n\nAll IPv6 subnets created from this VPC must be taken from this range, which should be a Unique Local Address in the range `fd00::/48`. The default VPC Subnet will have the first `/64` range from this prefix."
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            }
          ]
        },
        {
          "name": "delete",
          "about": "Delete a VPC",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        },
        {
          "name": "firewall-rules",
          "subcommands": [
            {
              "name": "update",
              "about": "Replace firewall rules",
              "args": [
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "view",
              "about": "List firewall rules",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            }
          ]
        },
        {
          "name": "list",
          "about": "List VPCs",
          "args": [
            {
              "long": "limit",
              "help": "Maximum number of items returned by a single call"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "sort-by",
              "values": [
                "name_ascending",
                "name_descending",
                "id_ascending"
              ]
            }
          ]
        },
        {
          "name": "router",
          "subcommands": [
            {
              "name": "create",
              "about": "Create a VPC router",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete a router",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "router",
                  "help": "Name or ID of the router"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "list",
              "about": "List routers",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "route",
              "subcommands": [
                {
                  "name": "create",
                  "about": "Create a router",
                  "args": [
                    {
                      "long": "description"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "name"
                    },
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "router",
                      "help": "Name or ID of the router"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC, only required if `subnet` is provided as a `Name`"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "about": "Delete a route",
                  "args": [
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "route",
                      "help": "Name or ID of the route"
                    },
                    {
                      "long": "router",
                      "help": "Name or ID of the router"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC, only required if `subnet` is provided as a `Name`"
                    }
                  ]
                },
                {
                  "name": "list",
                  "about": "List routes",
                  "long_about": "List the routes associated with a router in a particular VPC.",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "router",
                      "help": "Name or ID of the router"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "name_ascending",
                        "name_descending",
                        "id_ascending"
                      ]
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC, only required if `subnet` is provided as a `Name`"
                    }
                  ]
                },
                {
                  "name": "update",
                  "about": "Update a route",
                  "args": [
                    {
                      "long": "description"
                    },
                    {
                      "long": "json-body",
                      "help": "Path to a file that contains the full json body."
                    },
                    {
                      "long": "json-body-template",
                      "help": "XXX"
                    },
                    {
                      "long": "name"
                    },
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "route",
                      "help": "Name or ID of the route"
                    },
                    {
                      "long": "router",
                      "help": "Name or ID of the router"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC, only required if `subnet` is provided as a `Name`"
                    }
                  ]
                },
                {
                  "name": "view",
                  "about": "Fetch a route",
                  "args": [
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "route",
                      "help": "Name or ID of the route"
                    },
                    {
                      "long": "router",
                      "help": "Name or ID of the router"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC, only required if `subnet` is provided as a `Name`"
                    }
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update a router",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "router",
                  "help": "Name or ID of the router"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a router",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "router",
                  "help": "Name or ID of the router"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            }
          ]
        },
        {
          "name": "subnet",
          "subcommands": [
            {
              "name": "create",
              "about": "Create a subnet",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "ipv4-block",
                  "help": "The IPv4 address range for this subnet.\n\nIt must be allocated from an RFC 1918 private address range, and must not overlap with any other existing subnet in the VPC."
                },
                {
                  "long": "ipv6-block",
                  "help": "The IPv6 address range for this subnet.\n\nIt must be allocated from the RFC 4193 Unique Local Address range, with the prefix equal to the parent VPC's prefix. A random `/64` block will be assigned if one is not provided. It must not overlap with any existing subnet in the VPC."
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "delete",
              "about": "Delete a subnet",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "list",
              "about": "List subnets",
              "args": [
                {
                  "long": "limit",
                  "help": "Maximum number of items returned by a single call"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "sort-by",
                  "values": [
                    "name_ascending",
                    "name_descending",
                    "id_ascending"
                  ]
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "nic",
              "subcommands": [
                {
                  "name": "list",
                  "about": "List network interfaces",
                  "args": [
                    {
                      "long": "limit",
                      "help": "Maximum number of items returned by a single call"
                    },
                    {
                      "long": "project",
                      "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                    },
                    {
                      "long": "sort-by",
                      "values": [
                        "name_ascending",
                        "name_descending",
                        "id_ascending"
                      ]
                    },
                    {
                      "long": "subnet",
                      "help": "Name or ID of the subnet"
                    },
                    {
                      "long": "vpc",
                      "help": "Name or ID of the VPC"
                    }
                  ]
                }
              ]
            },
            {
              "name": "update",
              "about": "Update a subnet",
              "args": [
                {
                  "long": "description"
                },
                {
                  "long": "json-body",
                  "help": "Path to a file that contains the full json body."
                },
                {
                  "long": "json-body-template",
                  "help": "XXX"
                },
                {
                  "long": "name"
                },
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            },
            {
              "name": "view",
              "about": "Fetch a subnet",
              "args": [
                {
                  "long": "project",
                  "help": "Name or ID of the project, only required if `vpc` is provided as a `Name`"
                },
                {
                  "long": "subnet",
                  "help": "Name or ID of the subnet"
                },
                {
                  "long": "vpc",
                  "help": "Name or ID of the VPC"
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "about": "Update a VPC",
          "args": [
            {
              "long": "description"
            },
            {
              "long": "dns-name"
            },
            {
              "long": "json-body",
              "help": "Path to a file that contains the full json body."
            },
            {
              "long": "json-body-template",
              "help": "XXX"
            },
            {
              "long": "name"
            },
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        },
        {
          "name": "view",
          "about": "Fetch a VPC",
          "args": [
            {
              "long": "project",
              "help": "Name or ID of the project"
            },
            {
              "long": "vpc",
              "help": "Name or ID of the VPC"
            }
          ]
        }
      ]
    }
  ]
}
